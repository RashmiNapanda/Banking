openapi: '3.0.3'
info:
  description: APIs for opening new accounts for customers and viewing transactions
  title: Customer Accounts and Transactions API
  version: '3.0.0'

servers:
  - url: http://localhost:8082/api/v1/accounts/open/
    description: Base path for account opening API
  - url: http://localhost:8082/api/v1/accounts/customer/
    description: Base path for viewing customer details and transactions
  - url: http://localhost:8081/api/v1/transactions/create
    description: Base path for transaction API to insert new transactions

tags:
  - name: Accounts
    description: APIs for opening accounts and viewing transactions

security:
  - basicAuth: []

paths:
  /open/{customerId}:
    post:
      operationId: openAccount
      description: API to open an account for a customer
      tags:
        - Accounts
      parameters:
        - name: customerId
          in: path
          required: true
          description: Customer ID for whom the account will be opened
          schema:
            type: integer
            example: 1
        - name: initialCredit
          in: query
          required: true
          description: Initial credit amount when opening the account
          schema:
            type: integer
            example: 10
      responses:
        '201':
          description: Successfully created a new current account
          content:
            application/json:
              schema:
                type: string
                example: 'New account 1234 opened for the customer 1'
        '400':
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AccountNotFoundException'
        '500':
          description: Technical fault within the service
          content:
            application/json:
              schema:
                $ref: '#/components/responses/TransactionException'

  /customer/{customerId}:
    get:
      operationId: customerDetails
      description: API to get the accounts and transactions of a customer
      tags:
        - Accounts
      parameters:
        - name: customerId
          in: path
          required: true
          description: Customer ID to view accounts and transactions
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '400':
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AccountNotFoundException'
        '500':
          description: Technical fault within the service
          content:
            application/json:
              schema:
                $ref: '#/components/responses/TransactionException'

  /create:
    post:
      operationId: createTransaction
      description: API to create a transaction
      tags:
        - Accounts
      parameters:
        - name: amount
          in: query
          required: true
          description: Amount in the transaction
          schema:
            type: integer
            example: 10
      requestBody:
        required: true
        description: Parameters required to create a transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Successfully inserted transaction
          content:
            application/json:
              schema:
                type: string
                example: 'Transaction entry created for account number'
        '500':
          description: Technical fault within the service
          content:
            application/json:
              schema:
                $ref: '#/components/responses/TransactionException'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  responses:
    TransactionException:
      description: Technical issue while processing the transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    AccountNotFoundException:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            error: 'Invalid customer ID'

    Exception:
      description: Generic exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            error: 'Technical issues occurred during the operation'

  schemas:
    Errors:
      type: object
      properties:
        status:
          description: Error code status
          type: integer
        message:
          description: Error message
          type: string
        timestamp:
          description: Timestamp of when the exception occurred
          type: string

    CustomerDTO:
      type: object
      properties:
        name:
          description: Name of the customer
          type: string
          example: David
        surName:
          description: Surname of the customer
          type: string
          example: Miller
        accountList:
          description: List of accounts owned by the customer
          type: array
          items:
            $ref: '#/components/schemas/AccountDTO'

    AccountDTO:
      type: object
      properties:
        accountId:
          description: ID of the account
          type: integer
          example: 1
        balance:
          description: Balance in the account
          type: integer
          example: 300
        accountType:
          description: Type of account
          type: string
          example: Current Account
        transactions:
          description: List of transactions for the account
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'

    TransactionDTO:
      type: object
      properties:
        amount:
          description: Amount to be credited or debited
          type: integer
          example: 50
        time:
          description: Time of occurrence
          type: string
          example: '2025-08-22'
        transactionType:
          description: Transaction type (CREDIT or DEBIT)
          type: string
          example: CREDIT

    Account:
      type: object
      properties:
        accountId:
          description: ID of the account
          type: integer
          example: 1
        balance:
          description: Balance in the account
          type: integer
          example: 300
        accountType:
          description: Type of account
          type: string
          example: Current Account
        transactions:
          description: List of transactions for the account
          type: array
          items:
            $ref: '#/components/schemas/Transaction'

    Transaction:
      type: object
      properties:
        amount:
          description: Amount to be credited or debited
          type: integer
          example: 50
        time:
          description: Time of occurrence
          type: string
          example: '2025-08-22'
        transactionType:
          description: Transaction type (CREDIT or DEBIT)
          type: string
          example: CREDIT
